import{_ as c,o as i,c as l,d as n,b as a,w as u,a as t,e as s,r as p}from"./app.d7f447e9.js";const r={},d=t(`<h1 id="functions" tabindex="-1"><a class="header-anchor" href="#functions" aria-hidden="true">#</a> Functions</h1><p>Translation functions are made available globally in <code>&lt;template&gt;</code> sections but can also be used in scripts.</p><h2 id="functions-1" tabindex="-1"><a class="header-anchor" href="#functions-1" aria-hidden="true">#</a> Functions</h2><h3 id="gettext" tabindex="-1"><a class="header-anchor" href="#gettext" aria-hidden="true">#</a> <code>$gettext</code></h3><p>Simple message translation</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
  <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token function">$gettext</span><span class="token punctuation">(</span><span class="token string">&quot;My message&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> $gettext <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useGettext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">$gettext</span><span class="token punctuation">(</span><span class="token string">&quot;My message&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="interpolation" tabindex="-1"><a class="header-anchor" href="#interpolation" aria-hidden="true">#</a> Interpolation</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
  <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token function">$gettext</span><span class="token punctuation">(</span><span class="token string">&quot;My message for %{ name }&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;Rudi&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pgettext" tabindex="-1"><a class="header-anchor" href="#pgettext" aria-hidden="true">#</a> <code>$pgettext</code></h3><p>Takes a translation context as the first argument</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
  <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token function">$pgettext</span><span class="token punctuation">(</span><span class="token string">&quot;my_context&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;My message&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> $pgettext <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useGettext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">$pgettext</span><span class="token punctuation">(</span><span class="token string">&quot;my_context&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;My message&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="interpolation-1" tabindex="-1"><a class="header-anchor" href="#interpolation-1" aria-hidden="true">#</a> Interpolation</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
  <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token function">$pgettext</span><span class="token punctuation">(</span><span class="token string">&quot;my_context&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;My message for %{ name }&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;Rudi&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ngettext" tabindex="-1"><a class="header-anchor" href="#ngettext" aria-hidden="true">#</a> <code>$ngettext</code></h3><p>Can be used to pluralize messages</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  {{ $ngettext(&quot;apple&quot;, &quot;apples&quot;, 5) }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> $ngettext <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useGettext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">$ngettext</span><span class="token punctuation">(</span><span class="token string">&quot;apple&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;apples&quot;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="interpolation-2" tabindex="-1"><a class="header-anchor" href="#interpolation-2" aria-hidden="true">#</a> Interpolation</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
  <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token function">$ngettext</span><span class="token punctuation">(</span><span class="token string">&quot;apple for %{ name }&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;apples for %{ name }&quot;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;Rudi&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="npgettext" tabindex="-1"><a class="header-anchor" href="#npgettext" aria-hidden="true">#</a> <code>$npgettext</code></h3><p>Can be used to pluralize messages with a translation context</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  {{ $npgettext(&quot;my_context&quot;, &quot;apple&quot;, &quot;apples&quot;, 5) }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> $npgettext <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useGettext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">$npgettext</span><span class="token punctuation">(</span><span class="token string">&quot;my_context&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;apple&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;apples&quot;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="interpolation-3" tabindex="-1"><a class="header-anchor" href="#interpolation-3" aria-hidden="true">#</a> Interpolation</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
  <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token function">$npgettext</span><span class="token punctuation">(</span><span class="token string">&quot;my_context&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;apple for %{ name }&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;apples for %{ name }&quot;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;Rudi&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="language" tabindex="-1"><a class="header-anchor" href="#language" aria-hidden="true">#</a> <code>$language</code></h3><p>Provides access to the whole plugin, for example if you want to access the current language:</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  {{ $language.current }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> gettext <span class="token operator">=</span> <span class="token function">useGettext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gettext<span class="token punctuation">.</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gettextinterpolate" tabindex="-1"><a class="header-anchor" href="#gettextinterpolate" aria-hidden="true">#</a> <code>$gettextInterpolate</code></h3><div style="margin-top:1rem;" class="warning"> This helper function has been made redundant since the translate functions now directly take interpolation parameters. </div><p>This is a helper function if you use parameters within your messages.</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  {{ $gettextInterpolate($pgettext(&quot;My message for %{ name }&quot;), { name: &quot;Rudi&quot; }) }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> interpolate <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useGettext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">interpolate</span><span class="token punctuation">(</span><span class="token function">$gettext</span><span class="token punctuation">(</span><span class="token string">&quot;My message for %{ name }&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;Rudi&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="custom-translate-function-name" tabindex="-1"><a class="header-anchor" href="#custom-translate-function-name" aria-hidden="true">#</a> custom translate function name</h3>`,37),k=s("You can custom the translate function name by pass the "),g=n("code",null,"globalProperties",-1),v=s(" option to "),m=n("code",null,"createGettext",-1),b=s(", see "),h=s("Configuration"),x=s("."),f=t(`<p>For example, if you want to use the WordPress style:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createGettext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue3-gettext&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> gettext <span class="token operator">=</span> <span class="token function">createGettext</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token operator">...</span>
  globalProperties<span class="token operator">:</span> <span class="token punctuation">{</span>
    gettext<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;$gettext&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;__&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment">// both support \`$gettext\`, \`__\` the two names</span>
    ngettext<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;$ngettext&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;_n&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    pgettext<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;$pgettext&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;_x&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    npgettext<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;$npgettext&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;_nx&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you got a VSCode warning <code>Property &#39;{0}&#39; does not exist on type &#39;{1}&#39;. ts(2339)</code>, consider add a <code>gettext.d.ts</code> file like this:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">&#39;vue&#39;</span> <span class="token punctuation">{</span>
    <span class="token keyword">interface</span> <span class="token class-name">ComponentCustomProperties</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">__</span><span class="token operator">:</span> <span class="token punctuation">(</span>msgid<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> parameters<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> disableHtmlEscaping<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
        <span class="token function-variable function">_x</span><span class="token operator">:</span> <span class="token punctuation">(</span>context<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> msgid<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> parameters<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> disableHtmlEscaping<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
        <span class="token function-variable function">_n</span><span class="token operator">:</span> <span class="token punctuation">(</span>msgid<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> plural<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> parameters<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> disableHtmlEscaping<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
        <span class="token function-variable function">_xn</span><span class="token operator">:</span> <span class="token punctuation">(</span>context<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> msgid<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> plural<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> parameters<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> disableHtmlEscaping<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="html-escaping" tabindex="-1"><a class="header-anchor" href="#html-escaping" aria-hidden="true">#</a> Html escaping</h2>`,5),_=s("All the translation functions escape html by default and take a "),y=n("code",null,"disableHtmlEscaping",-1),q=s(" as their last parameter. If your translation messages or parameters contain html tags, you will have to set this to "),$=n("code",null,"true",-1),w=s(" and render the message using "),I={href:"https://vuejs.org/api/built-in-directives.html#v-html",target:"_blank",rel:"noopener noreferrer"},G=n("code",null,"v-html",-1),M=s(":"),R=t(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$gettext(<span class="token punctuation">&#39;</span>My %{name}<span class="token punctuation">&#39;</span>, { name: <span class="token punctuation">&#39;</span>&lt;b&gt;Rudi&lt;/b&gt;<span class="token punctuation">&#39;</span> }, true)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),C=s("Be careful when using "),E={href:"https://vuejs.org/api/built-in-directives.html#v-html",target:"_blank",rel:"noopener noreferrer"},H=n("code",null,"v-html",-1),P=s(". Don't use it for user-provided content so you're not vulnerable for XSS attacks.");function S(T,V){const o=p("RouterLink"),e=p("ExternalLinkIcon");return i(),l("div",null,[d,n("p",null,[k,g,v,m,b,a(o,{to:"/configuration.html"},{default:u(()=>[h]),_:1}),x]),f,n("p",null,[_,y,q,$,w,n("a",I,[G,a(e)]),M]),R,n("p",null,[C,n("a",E,[H,a(e)]),P])])}var L=c(r,[["render",S],["__file","functions.html.vue"]]);export{L as default};
